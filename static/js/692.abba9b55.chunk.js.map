{"version":3,"file":"static/js/692.abba9b55.chunk.js","mappings":"yQAAaA,EAAS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACvB,OAAO,uBAAIA,GACZ,E,kBCAYC,EAAOC,EAAAA,GAAAA,GAAH,kIASJC,EAAWD,EAAAA,GAAAA,GAAH,yMASRE,EAASF,EAAAA,GAAAA,EAAH,wFAMNG,EAAOH,EAAAA,GAAAA,EAAH,yFAKJI,EAAOJ,EAAAA,GAAAA,EAAH,uFCsBjB,EA/CgB,WACd,IAAQK,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAoBA,IAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAIF,EAAJ,CAIA,IAAMG,EAAc,mCAAG,8GAEIC,EAAAA,EAAAA,IAAWP,GAFf,OAEbQ,EAFa,OAInBJ,EAAWI,EAASC,SAJD,gDAMnBC,QAAQC,IAAR,MANmB,yDAAH,qDAUpBL,GAZC,CAaF,GAAE,CAACH,EAASH,IAERG,EAGL,OACE,8BACGA,EAAQS,OAAS,GAChB,SAAClB,EAAD,UACGS,EAAQU,KAAI,SAAAC,GACX,IAAQC,EAAgCD,EAAhCC,OAAQC,EAAwBF,EAAxBE,QAASC,EAAeH,EAAfG,WACzB,OACE,UAACrB,EAAD,YACE,SAACC,EAAD,UAASkB,KACT,SAACjB,EAAD,UAAO,IAAIoB,KAAKD,GAAYE,oBAC5B,SAACpB,EAAD,UAAOiB,MAHMF,EAAOM,GAMzB,OAGH,SAAC5B,EAAD,CAAQC,OAAQ,+CAIvB,C","sources":["components/UI/Mesage/Mesage.jsx","components/Reviews/Reviews.Syled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["export const Mesage = ({ mesage }) => {\n  return <p>{mesage}</p>;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 98vw;\n  margin: 10px auto;\n\n  list-style: none;\n`;\n\nexport const ListItem = styled.li`\n  background-color: rgba(0, 0, 0, 0.1);\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  border-radius: 8px;\n  padding: 5px;\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const Author = styled.p`\n  font-size: 20px;\n  font-weight: 700;\n  margin-bottom: 5px;\n`;\n\nexport const Data = styled.p`\n  font-size: 10px;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\nexport const Text = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  padding-left: 5px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from '../../api/themoviedbApi';\nimport { Mesage } from 'components/UI/Mesage/Mesage';\nimport { List, ListItem, Author, Text, Data } from './Reviews.Syled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    if (reviews) {\n      return;\n    }\n\n    const getReviewsInfo = async () => {\n      try {\n        const response = await getReviews(movieId);\n\n        setReviews(response.results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getReviewsInfo();\n  }, [reviews, movieId]);\n\n  if (!reviews) {\n    return;\n  }\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <List>\n          {reviews.map(review => {\n            const { author, content, created_at } = review;\n            return (\n              <ListItem key={review.id}>\n                <Author>{author}</Author>\n                <Data>{new Date(created_at).toLocaleString()}</Data>\n                <Text>{content}</Text>\n              </ListItem>\n            );\n          })}\n        </List>\n      ) : (\n        <Mesage mesage={\"We don't have any reviews for this movie.\"} />\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["Mesage","mesage","List","styled","ListItem","Author","Data","Text","movieId","useParams","useState","reviews","setReviews","useEffect","getReviewsInfo","getReviews","response","results","console","log","length","map","review","author","content","created_at","Date","toLocaleString","id"],"sourceRoot":""}